on:
  push:
    branches:
      - main

name: release-please

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@1155c2c8dcbd6b15e85bae6bc6d1fed9552663cb
        id: release
        with:
          token: ${{secrets.GITHUB_TOKEN}}

      # Output which releases were created
      - name: Output release info
        run: |
            echo "releases_created:" ${{ steps.release.outputs.releases_created }}
            echo "js--release_created:" ${{ steps.release.outputs['js--release_created'] }}
            echo "momoa-js--release_created:" ${{ steps.release.outputs['momoa-js--release_created'] }}
            echo "rust--release_created:" ${{ steps.release.outputs['rust--release_created'] }}
            echo "momoa-rs--release_created:" ${{ steps.release.outputs['momoa-rs--release_created'] }}

      - run: echo "A JavaScript release was created."
        if: ${{ steps.release.outputs['js--release_created'] }}
          
      - run: echo "A Rust release was created."
        if: ${{ steps.release.outputs['rust--release_created'] }}
          
      # Check to see if we need to do any releases and if so check out the repo
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.releases_created }}

      # Node.js release
      - uses: actions/setup-node@v4
        if: ${{ steps.release.outputs['js--release_created'] }}
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
        if: ${{ steps.release.outputs['js--release_created'] }}
        working-directory: js
      - run: npm publish --provenance
        if: ${{ steps.release.outputs['js--release_created'] }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        working-directory: js

      # Rust release
      - uses: actions-rs/toolchain@v1
        if: ${{ steps.release.outputs['rust--release_created'] }}
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: "cargo publish --token $CARGO_TOKEN"
        if: ${{ steps.release.outputs['rust--release_created'] }}
        working-directory: rust
        env:
          CARGO_TOKEN: ${{secrets.CARGO_TOKEN}}

      # Generates the social media post
      - run: npx @humanwhocodes/social-changelog --org humanwhocodes --repo momoa --name Momoa --tag ${{ steps.release.outputs['js--tag_name'] }} > social-post.txt
        if: ${{ steps.release.outputs.release_created }}
        env:
            OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      # Tweets out release announcement
      - run: 'npx @humanwhocodes/crosspost -t -b -m -l --file social-post.txt'
        if: ${{ steps.release.outputs.release_created }}
        env:
            TWITTER_API_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
            TWITTER_API_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
            TWITTER_ACCESS_TOKEN_KEY: ${{ secrets.TWITTER_ACCESS_TOKEN_KEY }}
            TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
            MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }}
            MASTODON_HOST: ${{ secrets.MASTODON_HOST }}
            BLUESKY_HOST: ${{ vars.BLUESKY_HOST }}
            BLUESKY_IDENTIFIER: ${{ vars.BLUESKY_IDENTIFIER }}
            BLUESKY_PASSWORD: ${{ secrets.BLUESKY_PASSWORD }}
            LINKEDIN_ACCESS_TOKEN: ${{ secrets.LINKEDIN_ACCESS_TOKEN }}
          

      # No tweets for Rust for now
